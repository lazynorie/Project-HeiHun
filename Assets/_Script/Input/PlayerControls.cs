//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.3
//     from Assets/_Script/Player Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player Movement"",
            ""id"": ""b183eb03-8222-440e-8d6e-61befc3a4dc4"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""119892fa-f9b8-4cce-b5f3-9f46d180bc4d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""9c14e6ed-2655-44e6-a140-8dfb9dd86cde"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Stick Right"",
                    ""type"": ""Button"",
                    ""id"": ""a02631b0-a2a5-42ee-b8e8-a180286885b5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Stick Left"",
                    ""type"": ""Button"",
                    ""id"": ""f77d9f5a-1c3b-4923-96c2-d0c37fa2edf2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""6b209f2c-c45b-4040-9f54-64918b6be247"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""dc28b690-5de7-42ed-a5fa-00ad0a7593c7"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""88fe6720-d983-40eb-b1b2-2c16e822c990"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""78dd5aa4-8d06-4c94-877e-3755518d6e1a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""75e16a69-d58a-43cf-84bc-99e2d033fba6"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""f3a5ed77-91d2-446c-bc68-128015b86ee7"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""ada91369-a18b-4970-82c8-63f2b6130010"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""c59c909f-eb59-44d7-91df-331b65bdeea8"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""dd992c59-4ba8-4c54-9231-c52121a4ca5b"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""440f7d90-dfdd-49a2-8b05-99302fe574c4"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""91693f28-504a-4281-9ec1-270c79577ada"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""13b7c943-82d3-4fde-b287-cd17dea3dfd4"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98c543c6-d347-4a93-9fee-3ec13c88bbbb"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5328294c-0925-4eb0-a1ba-76c52870ae26"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be09ed3f-0d05-4856-84eb-40885567860b"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""07f5e257-7370-4100-9b14-a2f1bf763d81"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb7ea539-ac37-4659-b58e-b93087f6dc1e"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Player Action"",
            ""id"": ""193861d6-f952-439d-bd61-a4c1b7bd5bdb"",
            ""actions"": [
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""a60afbb4-812b-4bb0-b440-fc847b79a7d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RB"",
                    ""type"": ""Button"",
                    ""id"": ""ab78c33a-1b65-4967-b2c0-96886468a7e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RT"",
                    ""type"": ""Button"",
                    ""id"": ""5506aa4b-73f3-4272-84b8-53cd375f5eb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""97513291-6878-4888-987a-602ccb1e9629"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""5c35ef83-046d-4a31-a6d3-fd2bc835368e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOn"",
                    ""type"": ""Button"",
                    ""id"": ""480a23ce-0305-49a6-b1fd-49872a3d86ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y"",
                    ""type"": ""Button"",
                    ""id"": ""746eb26c-e0e2-4277-8beb-240674508c9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e0ced437-388e-4532-8675-56342cab7ba3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94a5c375-0472-4ae2-a6f4-f28803b127a7"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e63ab01f-9ddb-4af3-8614-e49ba80c7179"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12aa1115-4739-4007-8a56-fd443b489903"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98d6a131-1505-4ed8-8a6e-bbc4d10d71b9"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c46da8ff-9d56-426e-9a90-3bcc36d31c42"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3a1a219-4d05-4f47-a2dc-ff34e3b71249"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e0ec23f-102e-4398-aa7b-77a9979aa8bd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebf4f717-072e-4aaf-b403-2d47629ce3ef"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79c36391-4026-42cf-9429-d1e25c4066bf"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2a5422e-46b4-4d5f-88d0-9f5e0ef4a612"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb09f4f3-8f08-424e-b070-a62303062a6e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56fed71d-6ae2-43a1-ad4f-c8c0d0173535"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Quick Slots Input"",
            ""id"": ""cc465ad4-2184-446e-b977-591450d82ea0"",
            ""actions"": [
                {
                    ""name"": ""D-Pad Left"",
                    ""type"": ""Button"",
                    ""id"": ""741d2b6b-386a-4627-abd2-3b26f55e0e78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Right"",
                    ""type"": ""Button"",
                    ""id"": ""61c13523-3d4e-4e5d-9db9-41c2a0493335"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Down"",
                    ""type"": ""Button"",
                    ""id"": ""b9326626-51e7-47ed-bb00-b96d832d8419"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Up"",
                    ""type"": ""Button"",
                    ""id"": ""d768705b-492b-40b2-9350-4797553d55ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d895208b-2abb-4f4b-bcf5-3dc77d9ea83e"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28685c91-fbe8-4690-90a2-997139a6b463"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed342b2a-7f2c-49e9-a010-2268a2bb31bb"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ce81830-2fff-4996-8479-8a4701ad06ec"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d76b609c-32f3-41d5-8f7e-6040088209ca"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18a268f0-2aa5-4d46-aa78-8323b16d0b95"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e54470e-231b-4a5c-aa12-9f73b0b3b1c8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1eacf745-e0e3-48de-b33c-7d81cd08a70e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player Movement
        m_PlayerMovement = asset.FindActionMap("Player Movement", throwIfNotFound: true);
        m_PlayerMovement_Movement = m_PlayerMovement.FindAction("Movement", throwIfNotFound: true);
        m_PlayerMovement_Camera = m_PlayerMovement.FindAction("Camera", throwIfNotFound: true);
        m_PlayerMovement_RightStickRight = m_PlayerMovement.FindAction("Right Stick Right", throwIfNotFound: true);
        m_PlayerMovement_RightStickLeft = m_PlayerMovement.FindAction("Right Stick Left", throwIfNotFound: true);
        // Player Action
        m_PlayerAction = asset.FindActionMap("Player Action", throwIfNotFound: true);
        m_PlayerAction_Roll = m_PlayerAction.FindAction("Roll", throwIfNotFound: true);
        m_PlayerAction_RB = m_PlayerAction.FindAction("RB", throwIfNotFound: true);
        m_PlayerAction_RT = m_PlayerAction.FindAction("RT", throwIfNotFound: true);
        m_PlayerAction_A = m_PlayerAction.FindAction("A", throwIfNotFound: true);
        m_PlayerAction_Start = m_PlayerAction.FindAction("Start", throwIfNotFound: true);
        m_PlayerAction_LockOn = m_PlayerAction.FindAction("LockOn", throwIfNotFound: true);
        m_PlayerAction_Y = m_PlayerAction.FindAction("Y", throwIfNotFound: true);
        // Quick Slots Input
        m_QuickSlotsInput = asset.FindActionMap("Quick Slots Input", throwIfNotFound: true);
        m_QuickSlotsInput_DPadLeft = m_QuickSlotsInput.FindAction("D-Pad Left", throwIfNotFound: true);
        m_QuickSlotsInput_DPadRight = m_QuickSlotsInput.FindAction("D-Pad Right", throwIfNotFound: true);
        m_QuickSlotsInput_DPadDown = m_QuickSlotsInput.FindAction("D-Pad Down", throwIfNotFound: true);
        m_QuickSlotsInput_DPadUp = m_QuickSlotsInput.FindAction("D-Pad Up", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Movement
    private readonly InputActionMap m_PlayerMovement;
    private IPlayerMovementActions m_PlayerMovementActionsCallbackInterface;
    private readonly InputAction m_PlayerMovement_Movement;
    private readonly InputAction m_PlayerMovement_Camera;
    private readonly InputAction m_PlayerMovement_RightStickRight;
    private readonly InputAction m_PlayerMovement_RightStickLeft;
    public struct PlayerMovementActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerMovementActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_PlayerMovement_Movement;
        public InputAction @Camera => m_Wrapper.m_PlayerMovement_Camera;
        public InputAction @RightStickRight => m_Wrapper.m_PlayerMovement_RightStickRight;
        public InputAction @RightStickLeft => m_Wrapper.m_PlayerMovement_RightStickLeft;
        public InputActionMap Get() { return m_Wrapper.m_PlayerMovement; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerMovementActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerMovementActions instance)
        {
            if (m_Wrapper.m_PlayerMovementActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnMovement;
                @Camera.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @Camera.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @Camera.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnCamera;
                @RightStickRight.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRightStickRight;
                @RightStickRight.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRightStickRight;
                @RightStickRight.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRightStickRight;
                @RightStickLeft.started -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRightStickLeft;
                @RightStickLeft.performed -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRightStickLeft;
                @RightStickLeft.canceled -= m_Wrapper.m_PlayerMovementActionsCallbackInterface.OnRightStickLeft;
            }
            m_Wrapper.m_PlayerMovementActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Camera.started += instance.OnCamera;
                @Camera.performed += instance.OnCamera;
                @Camera.canceled += instance.OnCamera;
                @RightStickRight.started += instance.OnRightStickRight;
                @RightStickRight.performed += instance.OnRightStickRight;
                @RightStickRight.canceled += instance.OnRightStickRight;
                @RightStickLeft.started += instance.OnRightStickLeft;
                @RightStickLeft.performed += instance.OnRightStickLeft;
                @RightStickLeft.canceled += instance.OnRightStickLeft;
            }
        }
    }
    public PlayerMovementActions @PlayerMovement => new PlayerMovementActions(this);

    // Player Action
    private readonly InputActionMap m_PlayerAction;
    private IPlayerActionActions m_PlayerActionActionsCallbackInterface;
    private readonly InputAction m_PlayerAction_Roll;
    private readonly InputAction m_PlayerAction_RB;
    private readonly InputAction m_PlayerAction_RT;
    private readonly InputAction m_PlayerAction_A;
    private readonly InputAction m_PlayerAction_Start;
    private readonly InputAction m_PlayerAction_LockOn;
    private readonly InputAction m_PlayerAction_Y;
    public struct PlayerActionActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActionActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @Roll => m_Wrapper.m_PlayerAction_Roll;
        public InputAction @RB => m_Wrapper.m_PlayerAction_RB;
        public InputAction @RT => m_Wrapper.m_PlayerAction_RT;
        public InputAction @A => m_Wrapper.m_PlayerAction_A;
        public InputAction @Start => m_Wrapper.m_PlayerAction_Start;
        public InputAction @LockOn => m_Wrapper.m_PlayerAction_LockOn;
        public InputAction @Y => m_Wrapper.m_PlayerAction_Y;
        public InputActionMap Get() { return m_Wrapper.m_PlayerAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionActions set) { return set.Get(); }
        public void SetCallbacks(IPlayerActionActions instance)
        {
            if (m_Wrapper.m_PlayerActionActionsCallbackInterface != null)
            {
                @Roll.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnRoll;
                @Roll.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnRoll;
                @Roll.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnRoll;
                @RB.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnRB;
                @RB.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnRB;
                @RB.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnRB;
                @RT.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnRT;
                @RT.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnRT;
                @RT.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnRT;
                @A.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnA;
                @A.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnA;
                @A.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnA;
                @Start.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnStart;
                @Start.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnStart;
                @Start.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnStart;
                @LockOn.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnLockOn;
                @LockOn.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnLockOn;
                @LockOn.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnLockOn;
                @Y.started -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnY;
                @Y.performed -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnY;
                @Y.canceled -= m_Wrapper.m_PlayerActionActionsCallbackInterface.OnY;
            }
            m_Wrapper.m_PlayerActionActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Roll.started += instance.OnRoll;
                @Roll.performed += instance.OnRoll;
                @Roll.canceled += instance.OnRoll;
                @RB.started += instance.OnRB;
                @RB.performed += instance.OnRB;
                @RB.canceled += instance.OnRB;
                @RT.started += instance.OnRT;
                @RT.performed += instance.OnRT;
                @RT.canceled += instance.OnRT;
                @A.started += instance.OnA;
                @A.performed += instance.OnA;
                @A.canceled += instance.OnA;
                @Start.started += instance.OnStart;
                @Start.performed += instance.OnStart;
                @Start.canceled += instance.OnStart;
                @LockOn.started += instance.OnLockOn;
                @LockOn.performed += instance.OnLockOn;
                @LockOn.canceled += instance.OnLockOn;
                @Y.started += instance.OnY;
                @Y.performed += instance.OnY;
                @Y.canceled += instance.OnY;
            }
        }
    }
    public PlayerActionActions @PlayerAction => new PlayerActionActions(this);

    // Quick Slots Input
    private readonly InputActionMap m_QuickSlotsInput;
    private IQuickSlotsInputActions m_QuickSlotsInputActionsCallbackInterface;
    private readonly InputAction m_QuickSlotsInput_DPadLeft;
    private readonly InputAction m_QuickSlotsInput_DPadRight;
    private readonly InputAction m_QuickSlotsInput_DPadDown;
    private readonly InputAction m_QuickSlotsInput_DPadUp;
    public struct QuickSlotsInputActions
    {
        private @PlayerControls m_Wrapper;
        public QuickSlotsInputActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @DPadLeft => m_Wrapper.m_QuickSlotsInput_DPadLeft;
        public InputAction @DPadRight => m_Wrapper.m_QuickSlotsInput_DPadRight;
        public InputAction @DPadDown => m_Wrapper.m_QuickSlotsInput_DPadDown;
        public InputAction @DPadUp => m_Wrapper.m_QuickSlotsInput_DPadUp;
        public InputActionMap Get() { return m_Wrapper.m_QuickSlotsInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(QuickSlotsInputActions set) { return set.Get(); }
        public void SetCallbacks(IQuickSlotsInputActions instance)
        {
            if (m_Wrapper.m_QuickSlotsInputActionsCallbackInterface != null)
            {
                @DPadLeft.started -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadLeft;
                @DPadLeft.performed -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadLeft;
                @DPadLeft.canceled -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadLeft;
                @DPadRight.started -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadRight;
                @DPadRight.performed -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadRight;
                @DPadRight.canceled -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadRight;
                @DPadDown.started -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadDown;
                @DPadDown.performed -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadDown;
                @DPadDown.canceled -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadDown;
                @DPadUp.started -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadUp;
                @DPadUp.performed -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadUp;
                @DPadUp.canceled -= m_Wrapper.m_QuickSlotsInputActionsCallbackInterface.OnDPadUp;
            }
            m_Wrapper.m_QuickSlotsInputActionsCallbackInterface = instance;
            if (instance != null)
            {
                @DPadLeft.started += instance.OnDPadLeft;
                @DPadLeft.performed += instance.OnDPadLeft;
                @DPadLeft.canceled += instance.OnDPadLeft;
                @DPadRight.started += instance.OnDPadRight;
                @DPadRight.performed += instance.OnDPadRight;
                @DPadRight.canceled += instance.OnDPadRight;
                @DPadDown.started += instance.OnDPadDown;
                @DPadDown.performed += instance.OnDPadDown;
                @DPadDown.canceled += instance.OnDPadDown;
                @DPadUp.started += instance.OnDPadUp;
                @DPadUp.performed += instance.OnDPadUp;
                @DPadUp.canceled += instance.OnDPadUp;
            }
        }
    }
    public QuickSlotsInputActions @QuickSlotsInput => new QuickSlotsInputActions(this);
    public interface IPlayerMovementActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnRightStickRight(InputAction.CallbackContext context);
        void OnRightStickLeft(InputAction.CallbackContext context);
    }
    public interface IPlayerActionActions
    {
        void OnRoll(InputAction.CallbackContext context);
        void OnRB(InputAction.CallbackContext context);
        void OnRT(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnLockOn(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
    }
    public interface IQuickSlotsInputActions
    {
        void OnDPadLeft(InputAction.CallbackContext context);
        void OnDPadRight(InputAction.CallbackContext context);
        void OnDPadDown(InputAction.CallbackContext context);
        void OnDPadUp(InputAction.CallbackContext context);
    }
}
