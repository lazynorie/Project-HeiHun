//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Script/Input/PlayerControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerControls"",
    ""maps"": [
        {
            ""name"": ""Player Action"",
            ""id"": ""193861d6-f952-439d-bd61-a4c1b7bd5bdb"",
            ""actions"": [
                {
                    ""name"": ""LT"",
                    ""type"": ""Button"",
                    ""id"": ""30e85dfa-2043-4bea-9768-921582966550"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap,Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RB"",
                    ""type"": ""Button"",
                    ""id"": ""ab78c33a-1b65-4967-b2c0-96886468a7e3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap,Hold(duration=1.401298E-45)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LB"",
                    ""type"": ""Button"",
                    ""id"": ""2f904f53-fade-4897-bdf5-5832436ee7d5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap,Hold(duration=1.401298E-45)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Critical Hit"",
                    ""type"": ""Button"",
                    ""id"": ""3ce7f05e-e9a7-46fe-81e3-51c1003a9e95"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RT"",
                    ""type"": ""Button"",
                    ""id"": ""5506aa4b-73f3-4272-84b8-53cd375f5eb2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""A"",
                    ""type"": ""Button"",
                    ""id"": ""97513291-6878-4888-987a-602ccb1e9629"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll"",
                    ""type"": ""Button"",
                    ""id"": ""a60afbb4-812b-4bb0-b440-fc847b79a7d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Tap,Hold"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""X"",
                    ""type"": ""Button"",
                    ""id"": ""c42b163d-3a2e-4250-91bc-fdb5ad0a3817"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Y"",
                    ""type"": ""Button"",
                    ""id"": ""746eb26c-e0e2-4277-8beb-240674508c9b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Start"",
                    ""type"": ""Button"",
                    ""id"": ""5c35ef83-046d-4a31-a6d3-fd2bc835368e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LockOn"",
                    ""type"": ""Button"",
                    ""id"": ""480a23ce-0305-49a6-b1fd-49872a3d86ad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""8581b6fc-6f5a-489e-9968-0fce0540f2c0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Camera"",
                    ""type"": ""PassThrough"",
                    ""id"": ""d51abcac-6b5e-4033-8e9b-3e6a9e535fdc"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Stick Right"",
                    ""type"": ""Button"",
                    ""id"": ""65a1f2ef-3136-41bc-b3da-c7cf5e64956b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Right Stick Left"",
                    ""type"": ""Button"",
                    ""id"": ""a7423f93-53c8-45e2-a40c-237be2649ee5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""e63ab01f-9ddb-4af3-8614-e49ba80c7179"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Tap,Hold(duration=1.401298E-45)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""12aa1115-4739-4007-8a56-fd443b489903"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Tap,Hold(duration=1.401298E-45)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""98d6a131-1505-4ed8-8a6e-bbc4d10d71b9"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c46da8ff-9d56-426e-9a90-3bcc36d31c42"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e3a1a219-4d05-4f47-a2dc-ff34e3b71249"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""7e0ec23f-102e-4398-aa7b-77a9979aa8bd"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""A"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ebf4f717-072e-4aaf-b403-2d47629ce3ef"",
                    ""path"": ""<Gamepad>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""79c36391-4026-42cf-9429-d1e25c4066bf"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Start"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c2a5422e-46b4-4d5f-88d0-9f5e0ef4a612"",
                    ""path"": ""<Gamepad>/rightStickPress"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""cb09f4f3-8f08-424e-b070-a62303062a6e"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LockOn"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""8966a6e8-4451-45ca-85f3-9d53755e270b"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Critical Hit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3be3f82f-ea26-4ac6-a060-147768c79b75"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": ""Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Critical Hit"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""e15eea14-d81f-49e7-9033-8a058f84385d"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""86b0cfe9-670b-4ca7-9def-bd48e247da4e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""23f2b91a-6ddb-4895-91d0-fa63c6175818"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""5fa9ae06-8c25-47dc-962f-4e2299d310a0"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""5a91c066-79b0-4c80-b8cb-70f662a53c42"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""1bbef1cd-ed0e-4d28-b12e-5e491ea929b4"",
                    ""path"": ""2DVector(mode=2)"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""7db418ed-6e44-4443-b207-c10c3ab9d9da"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""668d5bd7-6682-4bd8-ae48-7bb68e0085e0"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""7a8698da-a129-4e0f-bdcc-6c02da721aac"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""bed28fd4-5f08-49eb-87c5-ec90d4618e52"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""da2b9c9b-bd4c-4e41-834a-c30bf6dff329"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ec16fe56-ed8b-4a50-9ce9-a18e301e3290"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e170759c-7af6-40c3-88b5-940d374838f7"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector2"",
                    ""groups"": """",
                    ""action"": ""Camera"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d0f03f70-f438-4a2e-bfb3-7072e583e020"",
                    ""path"": ""<Gamepad>/rightStick/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""15f21e2a-1e78-4017-ba3b-5a74ccdf38f0"",
                    ""path"": ""<Keyboard>/equals"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e2b901ad-d69a-4049-8a3e-4a660e754522"",
                    ""path"": ""<Keyboard>/minus"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c383a92b-7edf-45b6-bc60-2cbf46e0ad7e"",
                    ""path"": ""<Gamepad>/rightStick/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Right Stick Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4a58250a-065d-4efe-9b74-2976b3d4ae0a"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": ""Tap,Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e20dbe47-8d9a-4c76-8eec-057eb95f327a"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": ""Tap,Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""264e942b-a485-4ccf-9c96-63f984363cc6"",
                    ""path"": ""<Gamepad>/leftShoulder"",
                    ""interactions"": ""Tap,Hold(duration=1.401298E-45)"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""71551056-5454-4430-b778-4b0659ab17dd"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""febd68b9-a818-44d6-b212-302baa151a35"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""X"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""56fed71d-6ae2-43a1-ad4f-c8c0d0173535"",
                    ""path"": ""<Gamepad>/buttonNorth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""50dc2b65-53ef-443f-8ede-5f8b88c512ee"",
                    ""path"": ""<Keyboard>/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Y"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e0ced437-388e-4532-8675-56342cab7ba3"",
                    ""path"": ""<Gamepad>/buttonEast"",
                    ""interactions"": ""Tap,Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""94a5c375-0472-4ae2-a6f4-f28803b127a7"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": ""Tap,Hold"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Roll"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Quick Slots Input"",
            ""id"": ""cc465ad4-2184-446e-b977-591450d82ea0"",
            ""actions"": [
                {
                    ""name"": ""D-Pad Left"",
                    ""type"": ""Button"",
                    ""id"": ""741d2b6b-386a-4627-abd2-3b26f55e0e78"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Right"",
                    ""type"": ""Button"",
                    ""id"": ""61c13523-3d4e-4e5d-9db9-41c2a0493335"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Down"",
                    ""type"": ""Button"",
                    ""id"": ""b9326626-51e7-47ed-bb00-b96d832d8419"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""D-Pad Up"",
                    ""type"": ""Button"",
                    ""id"": ""d768705b-492b-40b2-9350-4797553d55ee"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d895208b-2abb-4f4b-bcf5-3dc77d9ea83e"",
                    ""path"": ""<Gamepad>/dpad/left"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""28685c91-fbe8-4690-90a2-997139a6b463"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Left"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed342b2a-7f2c-49e9-a010-2268a2bb31bb"",
                    ""path"": ""<Gamepad>/dpad/right"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ce81830-2fff-4996-8479-8a4701ad06ec"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Right"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d76b609c-32f3-41d5-8f7e-6040088209ca"",
                    ""path"": ""<Gamepad>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18a268f0-2aa5-4d46-aa78-8323b16d0b95"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Down"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e54470e-231b-4a5c-aa12-9f73b0b3b1c8"",
                    ""path"": ""<Gamepad>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1eacf745-e0e3-48de-b33c-7d81cd08a70e"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""D-Pad Up"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI Navigation"",
            ""id"": ""e744840c-75b9-4463-9ade-7a27b1a3e764"",
            ""actions"": [
                {
                    ""name"": ""RB"",
                    ""type"": ""Button"",
                    ""id"": ""6fa071d2-a6e9-43d1-9d4d-412c72c0aa59"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LB"",
                    ""type"": ""Button"",
                    ""id"": ""170630fe-0688-4673-93b2-d05ebfc6c937"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""UP"",
                    ""type"": ""Button"",
                    ""id"": ""738aa1dc-344c-4219-9c80-1860a8130a5d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""DOWN"",
                    ""type"": ""Button"",
                    ""id"": ""93dddd9a-16ce-4707-aff2-3426ca022c36"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LEFT"",
                    ""type"": ""Button"",
                    ""id"": ""fdf90c76-2ae1-41aa-bd24-f025abcf81a7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RIGHT"",
                    ""type"": ""Button"",
                    ""id"": ""a96851ac-7a3a-45da-85cb-c042bef683af"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6ed73eb8-5b9f-4b6a-9276-ba3b4b984d3a"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""abad3631-e954-48bb-8d3a-ee2bc6ac5428"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9bb6d0f1-3957-47d4-9cf6-1878a66a856d"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LB"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93b8130e-4ad8-4cce-b6fc-ca69db9c77f9"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""UP"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5b162421-573b-4afa-a365-fd59624d5313"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""DOWN"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01d26d06-d2e9-4215-930a-7e110ba96f76"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LEFT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""557f3546-e3c0-4cec-b6ba-f9238060a7c5"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RIGHT"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player Action
        m_PlayerAction = asset.FindActionMap("Player Action", throwIfNotFound: true);
        m_PlayerAction_LT = m_PlayerAction.FindAction("LT", throwIfNotFound: true);
        m_PlayerAction_RB = m_PlayerAction.FindAction("RB", throwIfNotFound: true);
        m_PlayerAction_LB = m_PlayerAction.FindAction("LB", throwIfNotFound: true);
        m_PlayerAction_CriticalHit = m_PlayerAction.FindAction("Critical Hit", throwIfNotFound: true);
        m_PlayerAction_RT = m_PlayerAction.FindAction("RT", throwIfNotFound: true);
        m_PlayerAction_A = m_PlayerAction.FindAction("A", throwIfNotFound: true);
        m_PlayerAction_Roll = m_PlayerAction.FindAction("Roll", throwIfNotFound: true);
        m_PlayerAction_X = m_PlayerAction.FindAction("X", throwIfNotFound: true);
        m_PlayerAction_Y = m_PlayerAction.FindAction("Y", throwIfNotFound: true);
        m_PlayerAction_Start = m_PlayerAction.FindAction("Start", throwIfNotFound: true);
        m_PlayerAction_LockOn = m_PlayerAction.FindAction("LockOn", throwIfNotFound: true);
        m_PlayerAction_Movement = m_PlayerAction.FindAction("Movement", throwIfNotFound: true);
        m_PlayerAction_Camera = m_PlayerAction.FindAction("Camera", throwIfNotFound: true);
        m_PlayerAction_RightStickRight = m_PlayerAction.FindAction("Right Stick Right", throwIfNotFound: true);
        m_PlayerAction_RightStickLeft = m_PlayerAction.FindAction("Right Stick Left", throwIfNotFound: true);
        // Quick Slots Input
        m_QuickSlotsInput = asset.FindActionMap("Quick Slots Input", throwIfNotFound: true);
        m_QuickSlotsInput_DPadLeft = m_QuickSlotsInput.FindAction("D-Pad Left", throwIfNotFound: true);
        m_QuickSlotsInput_DPadRight = m_QuickSlotsInput.FindAction("D-Pad Right", throwIfNotFound: true);
        m_QuickSlotsInput_DPadDown = m_QuickSlotsInput.FindAction("D-Pad Down", throwIfNotFound: true);
        m_QuickSlotsInput_DPadUp = m_QuickSlotsInput.FindAction("D-Pad Up", throwIfNotFound: true);
        // UI Navigation
        m_UINavigation = asset.FindActionMap("UI Navigation", throwIfNotFound: true);
        m_UINavigation_RB = m_UINavigation.FindAction("RB", throwIfNotFound: true);
        m_UINavigation_LB = m_UINavigation.FindAction("LB", throwIfNotFound: true);
        m_UINavigation_UP = m_UINavigation.FindAction("UP", throwIfNotFound: true);
        m_UINavigation_DOWN = m_UINavigation.FindAction("DOWN", throwIfNotFound: true);
        m_UINavigation_LEFT = m_UINavigation.FindAction("LEFT", throwIfNotFound: true);
        m_UINavigation_RIGHT = m_UINavigation.FindAction("RIGHT", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player Action
    private readonly InputActionMap m_PlayerAction;
    private List<IPlayerActionActions> m_PlayerActionActionsCallbackInterfaces = new List<IPlayerActionActions>();
    private readonly InputAction m_PlayerAction_LT;
    private readonly InputAction m_PlayerAction_RB;
    private readonly InputAction m_PlayerAction_LB;
    private readonly InputAction m_PlayerAction_CriticalHit;
    private readonly InputAction m_PlayerAction_RT;
    private readonly InputAction m_PlayerAction_A;
    private readonly InputAction m_PlayerAction_Roll;
    private readonly InputAction m_PlayerAction_X;
    private readonly InputAction m_PlayerAction_Y;
    private readonly InputAction m_PlayerAction_Start;
    private readonly InputAction m_PlayerAction_LockOn;
    private readonly InputAction m_PlayerAction_Movement;
    private readonly InputAction m_PlayerAction_Camera;
    private readonly InputAction m_PlayerAction_RightStickRight;
    private readonly InputAction m_PlayerAction_RightStickLeft;
    public struct PlayerActionActions
    {
        private @PlayerControls m_Wrapper;
        public PlayerActionActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @LT => m_Wrapper.m_PlayerAction_LT;
        public InputAction @RB => m_Wrapper.m_PlayerAction_RB;
        public InputAction @LB => m_Wrapper.m_PlayerAction_LB;
        public InputAction @CriticalHit => m_Wrapper.m_PlayerAction_CriticalHit;
        public InputAction @RT => m_Wrapper.m_PlayerAction_RT;
        public InputAction @A => m_Wrapper.m_PlayerAction_A;
        public InputAction @Roll => m_Wrapper.m_PlayerAction_Roll;
        public InputAction @X => m_Wrapper.m_PlayerAction_X;
        public InputAction @Y => m_Wrapper.m_PlayerAction_Y;
        public InputAction @Start => m_Wrapper.m_PlayerAction_Start;
        public InputAction @LockOn => m_Wrapper.m_PlayerAction_LockOn;
        public InputAction @Movement => m_Wrapper.m_PlayerAction_Movement;
        public InputAction @Camera => m_Wrapper.m_PlayerAction_Camera;
        public InputAction @RightStickRight => m_Wrapper.m_PlayerAction_RightStickRight;
        public InputAction @RightStickLeft => m_Wrapper.m_PlayerAction_RightStickLeft;
        public InputActionMap Get() { return m_Wrapper.m_PlayerAction; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActionActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActionActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Add(instance);
            @LT.started += instance.OnLT;
            @LT.performed += instance.OnLT;
            @LT.canceled += instance.OnLT;
            @RB.started += instance.OnRB;
            @RB.performed += instance.OnRB;
            @RB.canceled += instance.OnRB;
            @LB.started += instance.OnLB;
            @LB.performed += instance.OnLB;
            @LB.canceled += instance.OnLB;
            @CriticalHit.started += instance.OnCriticalHit;
            @CriticalHit.performed += instance.OnCriticalHit;
            @CriticalHit.canceled += instance.OnCriticalHit;
            @RT.started += instance.OnRT;
            @RT.performed += instance.OnRT;
            @RT.canceled += instance.OnRT;
            @A.started += instance.OnA;
            @A.performed += instance.OnA;
            @A.canceled += instance.OnA;
            @Roll.started += instance.OnRoll;
            @Roll.performed += instance.OnRoll;
            @Roll.canceled += instance.OnRoll;
            @X.started += instance.OnX;
            @X.performed += instance.OnX;
            @X.canceled += instance.OnX;
            @Y.started += instance.OnY;
            @Y.performed += instance.OnY;
            @Y.canceled += instance.OnY;
            @Start.started += instance.OnStart;
            @Start.performed += instance.OnStart;
            @Start.canceled += instance.OnStart;
            @LockOn.started += instance.OnLockOn;
            @LockOn.performed += instance.OnLockOn;
            @LockOn.canceled += instance.OnLockOn;
            @Movement.started += instance.OnMovement;
            @Movement.performed += instance.OnMovement;
            @Movement.canceled += instance.OnMovement;
            @Camera.started += instance.OnCamera;
            @Camera.performed += instance.OnCamera;
            @Camera.canceled += instance.OnCamera;
            @RightStickRight.started += instance.OnRightStickRight;
            @RightStickRight.performed += instance.OnRightStickRight;
            @RightStickRight.canceled += instance.OnRightStickRight;
            @RightStickLeft.started += instance.OnRightStickLeft;
            @RightStickLeft.performed += instance.OnRightStickLeft;
            @RightStickLeft.canceled += instance.OnRightStickLeft;
        }

        private void UnregisterCallbacks(IPlayerActionActions instance)
        {
            @LT.started -= instance.OnLT;
            @LT.performed -= instance.OnLT;
            @LT.canceled -= instance.OnLT;
            @RB.started -= instance.OnRB;
            @RB.performed -= instance.OnRB;
            @RB.canceled -= instance.OnRB;
            @LB.started -= instance.OnLB;
            @LB.performed -= instance.OnLB;
            @LB.canceled -= instance.OnLB;
            @CriticalHit.started -= instance.OnCriticalHit;
            @CriticalHit.performed -= instance.OnCriticalHit;
            @CriticalHit.canceled -= instance.OnCriticalHit;
            @RT.started -= instance.OnRT;
            @RT.performed -= instance.OnRT;
            @RT.canceled -= instance.OnRT;
            @A.started -= instance.OnA;
            @A.performed -= instance.OnA;
            @A.canceled -= instance.OnA;
            @Roll.started -= instance.OnRoll;
            @Roll.performed -= instance.OnRoll;
            @Roll.canceled -= instance.OnRoll;
            @X.started -= instance.OnX;
            @X.performed -= instance.OnX;
            @X.canceled -= instance.OnX;
            @Y.started -= instance.OnY;
            @Y.performed -= instance.OnY;
            @Y.canceled -= instance.OnY;
            @Start.started -= instance.OnStart;
            @Start.performed -= instance.OnStart;
            @Start.canceled -= instance.OnStart;
            @LockOn.started -= instance.OnLockOn;
            @LockOn.performed -= instance.OnLockOn;
            @LockOn.canceled -= instance.OnLockOn;
            @Movement.started -= instance.OnMovement;
            @Movement.performed -= instance.OnMovement;
            @Movement.canceled -= instance.OnMovement;
            @Camera.started -= instance.OnCamera;
            @Camera.performed -= instance.OnCamera;
            @Camera.canceled -= instance.OnCamera;
            @RightStickRight.started -= instance.OnRightStickRight;
            @RightStickRight.performed -= instance.OnRightStickRight;
            @RightStickRight.canceled -= instance.OnRightStickRight;
            @RightStickLeft.started -= instance.OnRightStickLeft;
            @RightStickLeft.performed -= instance.OnRightStickLeft;
            @RightStickLeft.canceled -= instance.OnRightStickLeft;
        }

        public void RemoveCallbacks(IPlayerActionActions instance)
        {
            if (m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActionActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActionActions @PlayerAction => new PlayerActionActions(this);

    // Quick Slots Input
    private readonly InputActionMap m_QuickSlotsInput;
    private List<IQuickSlotsInputActions> m_QuickSlotsInputActionsCallbackInterfaces = new List<IQuickSlotsInputActions>();
    private readonly InputAction m_QuickSlotsInput_DPadLeft;
    private readonly InputAction m_QuickSlotsInput_DPadRight;
    private readonly InputAction m_QuickSlotsInput_DPadDown;
    private readonly InputAction m_QuickSlotsInput_DPadUp;
    public struct QuickSlotsInputActions
    {
        private @PlayerControls m_Wrapper;
        public QuickSlotsInputActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @DPadLeft => m_Wrapper.m_QuickSlotsInput_DPadLeft;
        public InputAction @DPadRight => m_Wrapper.m_QuickSlotsInput_DPadRight;
        public InputAction @DPadDown => m_Wrapper.m_QuickSlotsInput_DPadDown;
        public InputAction @DPadUp => m_Wrapper.m_QuickSlotsInput_DPadUp;
        public InputActionMap Get() { return m_Wrapper.m_QuickSlotsInput; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(QuickSlotsInputActions set) { return set.Get(); }
        public void AddCallbacks(IQuickSlotsInputActions instance)
        {
            if (instance == null || m_Wrapper.m_QuickSlotsInputActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_QuickSlotsInputActionsCallbackInterfaces.Add(instance);
            @DPadLeft.started += instance.OnDPadLeft;
            @DPadLeft.performed += instance.OnDPadLeft;
            @DPadLeft.canceled += instance.OnDPadLeft;
            @DPadRight.started += instance.OnDPadRight;
            @DPadRight.performed += instance.OnDPadRight;
            @DPadRight.canceled += instance.OnDPadRight;
            @DPadDown.started += instance.OnDPadDown;
            @DPadDown.performed += instance.OnDPadDown;
            @DPadDown.canceled += instance.OnDPadDown;
            @DPadUp.started += instance.OnDPadUp;
            @DPadUp.performed += instance.OnDPadUp;
            @DPadUp.canceled += instance.OnDPadUp;
        }

        private void UnregisterCallbacks(IQuickSlotsInputActions instance)
        {
            @DPadLeft.started -= instance.OnDPadLeft;
            @DPadLeft.performed -= instance.OnDPadLeft;
            @DPadLeft.canceled -= instance.OnDPadLeft;
            @DPadRight.started -= instance.OnDPadRight;
            @DPadRight.performed -= instance.OnDPadRight;
            @DPadRight.canceled -= instance.OnDPadRight;
            @DPadDown.started -= instance.OnDPadDown;
            @DPadDown.performed -= instance.OnDPadDown;
            @DPadDown.canceled -= instance.OnDPadDown;
            @DPadUp.started -= instance.OnDPadUp;
            @DPadUp.performed -= instance.OnDPadUp;
            @DPadUp.canceled -= instance.OnDPadUp;
        }

        public void RemoveCallbacks(IQuickSlotsInputActions instance)
        {
            if (m_Wrapper.m_QuickSlotsInputActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IQuickSlotsInputActions instance)
        {
            foreach (var item in m_Wrapper.m_QuickSlotsInputActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_QuickSlotsInputActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public QuickSlotsInputActions @QuickSlotsInput => new QuickSlotsInputActions(this);

    // UI Navigation
    private readonly InputActionMap m_UINavigation;
    private List<IUINavigationActions> m_UINavigationActionsCallbackInterfaces = new List<IUINavigationActions>();
    private readonly InputAction m_UINavigation_RB;
    private readonly InputAction m_UINavigation_LB;
    private readonly InputAction m_UINavigation_UP;
    private readonly InputAction m_UINavigation_DOWN;
    private readonly InputAction m_UINavigation_LEFT;
    private readonly InputAction m_UINavigation_RIGHT;
    public struct UINavigationActions
    {
        private @PlayerControls m_Wrapper;
        public UINavigationActions(@PlayerControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @RB => m_Wrapper.m_UINavigation_RB;
        public InputAction @LB => m_Wrapper.m_UINavigation_LB;
        public InputAction @UP => m_Wrapper.m_UINavigation_UP;
        public InputAction @DOWN => m_Wrapper.m_UINavigation_DOWN;
        public InputAction @LEFT => m_Wrapper.m_UINavigation_LEFT;
        public InputAction @RIGHT => m_Wrapper.m_UINavigation_RIGHT;
        public InputActionMap Get() { return m_Wrapper.m_UINavigation; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UINavigationActions set) { return set.Get(); }
        public void AddCallbacks(IUINavigationActions instance)
        {
            if (instance == null || m_Wrapper.m_UINavigationActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UINavigationActionsCallbackInterfaces.Add(instance);
            @RB.started += instance.OnRB;
            @RB.performed += instance.OnRB;
            @RB.canceled += instance.OnRB;
            @LB.started += instance.OnLB;
            @LB.performed += instance.OnLB;
            @LB.canceled += instance.OnLB;
            @UP.started += instance.OnUP;
            @UP.performed += instance.OnUP;
            @UP.canceled += instance.OnUP;
            @DOWN.started += instance.OnDOWN;
            @DOWN.performed += instance.OnDOWN;
            @DOWN.canceled += instance.OnDOWN;
            @LEFT.started += instance.OnLEFT;
            @LEFT.performed += instance.OnLEFT;
            @LEFT.canceled += instance.OnLEFT;
            @RIGHT.started += instance.OnRIGHT;
            @RIGHT.performed += instance.OnRIGHT;
            @RIGHT.canceled += instance.OnRIGHT;
        }

        private void UnregisterCallbacks(IUINavigationActions instance)
        {
            @RB.started -= instance.OnRB;
            @RB.performed -= instance.OnRB;
            @RB.canceled -= instance.OnRB;
            @LB.started -= instance.OnLB;
            @LB.performed -= instance.OnLB;
            @LB.canceled -= instance.OnLB;
            @UP.started -= instance.OnUP;
            @UP.performed -= instance.OnUP;
            @UP.canceled -= instance.OnUP;
            @DOWN.started -= instance.OnDOWN;
            @DOWN.performed -= instance.OnDOWN;
            @DOWN.canceled -= instance.OnDOWN;
            @LEFT.started -= instance.OnLEFT;
            @LEFT.performed -= instance.OnLEFT;
            @LEFT.canceled -= instance.OnLEFT;
            @RIGHT.started -= instance.OnRIGHT;
            @RIGHT.performed -= instance.OnRIGHT;
            @RIGHT.canceled -= instance.OnRIGHT;
        }

        public void RemoveCallbacks(IUINavigationActions instance)
        {
            if (m_Wrapper.m_UINavigationActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUINavigationActions instance)
        {
            foreach (var item in m_Wrapper.m_UINavigationActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UINavigationActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UINavigationActions @UINavigation => new UINavigationActions(this);
    public interface IPlayerActionActions
    {
        void OnLT(InputAction.CallbackContext context);
        void OnRB(InputAction.CallbackContext context);
        void OnLB(InputAction.CallbackContext context);
        void OnCriticalHit(InputAction.CallbackContext context);
        void OnRT(InputAction.CallbackContext context);
        void OnA(InputAction.CallbackContext context);
        void OnRoll(InputAction.CallbackContext context);
        void OnX(InputAction.CallbackContext context);
        void OnY(InputAction.CallbackContext context);
        void OnStart(InputAction.CallbackContext context);
        void OnLockOn(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnCamera(InputAction.CallbackContext context);
        void OnRightStickRight(InputAction.CallbackContext context);
        void OnRightStickLeft(InputAction.CallbackContext context);
    }
    public interface IQuickSlotsInputActions
    {
        void OnDPadLeft(InputAction.CallbackContext context);
        void OnDPadRight(InputAction.CallbackContext context);
        void OnDPadDown(InputAction.CallbackContext context);
        void OnDPadUp(InputAction.CallbackContext context);
    }
    public interface IUINavigationActions
    {
        void OnRB(InputAction.CallbackContext context);
        void OnLB(InputAction.CallbackContext context);
        void OnUP(InputAction.CallbackContext context);
        void OnDOWN(InputAction.CallbackContext context);
        void OnLEFT(InputAction.CallbackContext context);
        void OnRIGHT(InputAction.CallbackContext context);
    }
}
